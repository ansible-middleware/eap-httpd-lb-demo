---
- name: Subscribe eap machines
  include_role:
    name: "{{ role_path }}/../infra-ansible/roles/rhsm"
  when: rhsm_manage | bool

- name: "Copy Jcliff Rules Directory"
  copy:
    src: "files/rules/"
    dest: "{{ jcliff_rules_dir }}"

- name: Install Packages
  yum:
    name: "{{ yum_packages }}"
    state: latest
  notify:
    - Restart eap

- name: Update EAP rpm configuration file
  lineinfile:
    path: /etc/opt/rh/eap7/wildfly/eap7-standalone.conf
    line: "{{ item.line }}"
    regex: "{{ item.regex }}"
  loop:
    - { regex: "^WILDFLY_BIND", line: "WILDFLY_BIND={{ jboss_eap_bind }}" }
    - { regex: "^WILDFLY_SERVER_CONFIG", line: "WILDFLY_SERVER_CONFIG={{ jboss_eap_service_config }}" }
    - { regex: "^WILDFLY_OPTS", line: "WILDFLY_OPTS=\"-bmanagement {{ jboss_eap_bind }}\"" }
    - { regex: "^JAVA_OPTS", line: "JAVA_OPTS=\"-Djboss.node.name={{ ansible_hostname }}\"" }
  notify:
    - Restart eap

- name: Start eap
  service:
    name: "{{ jboss_eap_service_name }}"
    state: started

- name: "Wait for EAP to Management Port to become available"
  uri:
    url: "http://127.0.0.1:{{ management_port }}/health"
    status_code: 200
  register: result
  until: result.status == 200
  retries: 60
  delay: 3

- name: Initialize JCliff Subsystems Fact
  set_fact:
    jcliff_subsystems: []
    jcliff_deployments: []

- name: Build Remote Socket Facts
  set_fact:
    jcliff_remote_sockets: "{{ jcliff_remote_sockets|default([]) + [ {'name': hostvars[item]['ansible_hostname'], 'host': hostvars[item]['ansible_default_ipv4']['address'], 'port': mod_cluster_port} ] }}"
  loop: "{{ groups['httpd'] }}"

- name: Attach Remote Socket Facts to Subsystems
  set_fact:
    jcliff_subsystems: "{{ jcliff_subsystems|default([]) + [ { 'standard_sockets': { 'remote_destination_outbound_socket_binding': jcliff_remote_sockets } } ] }}"
  when: jcliff_remote_sockets is defined and jcliff_remote_sockets | length > 0

- name: Deploy Applications to EAP
  include_tasks: deploy_app.yml
  loop: "{{ deploy_apps }}"
  loop_control:
    loop_var: app

- name: Attach Deployments Facts to Subsystems
  set_fact:
    jcliff_subsystems: "{{ jcliff_subsystems|default([]) + [ { 'deployments': jcliff_deployments } ] }}"
  when: jcliff_deployments is defined and jcliff_deployments | length > 0


- name: Execute Jcliff
  jcliff:
    wfly_home: "{{ jboss_home }}"
    timeout: 5000000
    subsystems: "{{ jcliff_subsystems }}"
  when: jcliff_subsystems | length > 0

- name: Update Modcluster proxies
  command: >
    {{ jboss_home }}/bin/jboss-cli.sh --output-json -c --controller="localhost:{{ management_port }}" --commands="/subsystem=modcluster/proxy=default:write-attribute(name=proxies,value=[{%for host in groups['httpd']%}{{ hostvars[host]['ansible_hostname'] }}{% if not loop.last %} {% endif %}{% endfor %}])"

- name: Reload Server
  command: >
   {{ jboss_home }}/bin/jboss-cli.sh --output-json -c --controller="localhost:{{ management_port }}" --command=":reload"

